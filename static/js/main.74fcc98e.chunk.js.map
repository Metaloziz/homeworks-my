{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","post","ava","back","alt","src","avatar","block","name","message","time","messageData","HW1","s","title","Affair","newStyle","affair","priority","high","low","middle","divBody","onClick","deleteAffairCallback","_id","SuperButton","red","restProps","finalClassName","default","Affairs","mappedAffairs","data","map","a","listDivBody","diveButtonFilter","buttonFilter","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","item","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","inputError","finalInputClassName","standartInputStyle","errorInputStyle","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputNotError","divConteiner","placeholder","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","greetingContainer","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,aAAe,8BAA8B,YAAc,6BAA6B,QAAU,yBAAyB,KAAO,sBAAsB,IAAM,qBAAqB,KAAO,sBAAsB,OAAS,wBAAwB,MAAQ,yB,iBCAhUD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,IAAM,qBAAqB,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,yB,gBCA3OD,EAAOC,QAAU,CAAC,kBAAoB,oCAAoC,cAAgB,gCAAgC,WAAa,6BAA6B,aAAe,+BAA+B,MAAQ,wBAAwB,WAAa,6BAA6B,cAAgB,gCAAgC,aAAe,iC,oBCA3VD,EAAOC,QAAU,CAAC,mBAAqB,2CAA2C,gBAAkB,wCAAwC,cAAgB,sCAAsC,WAAa,qC,gBCA/MD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,2BAA2B,MAAQ,qB,iBCA3HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,aAAe,oC,gBCAvGD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,iBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,iJCSXC,EAAU,SAACC,GACpB,OACI,sBAAKC,UAAWC,IAAMC,KAAtB,UACI,qBAAKF,UAAWC,IAAME,IAAtB,SACI,qBAAKH,UAAWC,IAAMG,KAAtB,SACI,qBAAKC,IAAK,MAAOC,IAAKP,EAAMQ,aAIpC,sBAAKP,UAAWC,IAAMO,MAAtB,UACI,qBAAKR,UAAWC,IAAMQ,KAAtB,SAA6BV,EAAMU,OACnC,qBAAKT,UAAWC,IAAMS,QAAtB,SAAgCX,EAAMW,UACtC,qBAAKV,UAAWC,IAAMU,KAAtB,SAA6BZ,EAAMY,cClB7CC,EACM,sGADNA,EAEI,gBAFJA,EAGO,QAHPA,EAII,QA0BKC,MAvBf,WACI,OACI,gCACI,uBACD,sBAAMb,UAAWc,IAAEC,MAAnB,2BAIC,cAAC,EAAD,CACIR,OAAQK,EACRH,KAAMG,EACNF,QAASE,EACTD,KAAMC,IAGV,uBAGA,2B,uBCEGI,MAtBf,SAAgBjB,GAEZ,IAMIkB,EAAqC,SAA1BlB,EAAMmB,OAAOC,SAAsBL,IAAEM,KAAiC,QAA1BrB,EAAMmB,OAAOC,SAAqBL,IAAEO,IAAMP,IAAEQ,OAEvG,OAEQ,sBAAKtB,UAAWc,IAAES,QAAlB,UACI,qBAAKvB,UAAWc,IAAEL,KAAlB,SAAyBV,EAAMmB,OAAOT,OACtC,qBAAKT,UAAWiB,EAAhB,SAA2BlB,EAAMmB,OAAOC,WACxC,wBAAQK,QAbG,WACnBzB,EAAM0B,qBAAqB1B,EAAMmB,OAAOQ,MAYhC,mB,+BCEDC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK5B,EAGR,EAHQA,UACF6B,EAEN,mCACKC,EAAc,UAAMhB,IAAEiB,QAAR,YAAmBH,EAAMd,IAAEc,IAAM,GAAjC,YAAuC5B,GAE3D,OACI,oCACIA,UAAW8B,GACPD,KCTT,SAASG,EAAQjC,GACpB,IAAMkC,EAAgBlC,EAAMmC,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIlB,OAAQkB,EACRX,qBAAsB1B,EAAM0B,sBAFvBW,EAAEV,QAWf,OACI,gCACI,qBAAK1B,UAAWc,IAAEuB,YAAlB,SACKJ,IAEL,sBAAKjC,UAAWc,IAAEwB,iBAAlB,UAKI,cAAC,EAAD,CAAatC,UAAWc,IAAEyB,aAAcf,QAfrC,kBAAMzB,EAAMyC,UAAU,QAezB,iBACA,cAAC,EAAD,CAAaxC,UAAWc,IAAEyB,aAAcf,QAfpC,kBAAMzB,EAAMyC,UAAU,SAe1B,kBACA,cAAC,EAAD,CAAaxC,UAAWc,IAAEyB,aAAcf,QAflC,kBAAMzB,EAAMyC,UAAU,WAe5B,oBACA,cAAC,EAAD,CAAaxC,UAAWc,IAAEyB,aAAcf,QAfrC,kBAAMzB,EAAMyC,UAAU,QAezB,uBC3BhB,IAAMC,EAAqC,CACvC,CAACf,IAAK,EAAGjB,KAAM,QAASU,SAAU,QAClC,CAACO,IAAK,EAAGjB,KAAM,QAASU,SAAU,OAClC,CAACO,IAAK,EAAGjB,KAAM,QAASU,SAAU,OAClC,CAACO,IAAK,EAAGjB,KAAM,OAAQU,SAAU,QACjC,CAACO,IAAK,EAAGjB,KAAM,aAAcU,SAAU,WAiC5BuB,MApBf,WAAgB,IAAD,EACmBC,mBAA6BF,GADhD,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAGLO,EAbmB,SAACH,EAA6BE,GACvD,MAAe,QAAXA,EACOF,EACGA,EAAQE,QAAO,SAAAE,GAAI,OAAIA,EAAK7B,WAAa2B,KAU/BG,CAAcL,EAASE,GAE/C,OACI,gCACI,sBAAM9C,UAAWc,IAAEC,MAAnB,0BACA,cAACiB,EAAD,CACIE,KAAMa,EACNP,UAAWA,EACXf,qBAPiB,SAACC,GAAD,OAAiBmB,EARtB,SAACD,EAA6BlB,GACtD,OAAOkB,EAAQE,QAAO,SAAAE,GAAI,OAAIA,EAAKtB,MAAQA,KAOcwB,CAAaN,EAASlB,OASvE,2B,yCCiBGyB,EA7C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACAzD,EAIH,EAJGA,UAAW0D,EAId,EAJcA,cAER7B,EAEN,6GAeK8B,EAAkB,UAAM7C,IAAE8C,WAAR,YAAsBF,GAAgC,IAExEG,EAAmB,UAAM/C,IAAEgD,mBAAR,YAA8B9D,EAA9B,aAA4CyD,EAAQ3C,IAAEiD,gBAAkB,IAGjG,OACI,gCACI,mCACIX,KAAM,OACNC,SAvBa,SAACW,GACtBX,GACGA,EAASW,GAEZV,GAAgBA,EAAaU,EAAEC,cAAcC,QAoBrCX,WAlBe,SAACS,GACxBT,GAAcA,EAAWS,GAEzBR,GACa,UAAVQ,EAAEG,KACFX,KAcKxD,UAAW6D,GAEPhC,IAEP4B,GAAS,sBAAMzD,UAAW2D,EAAjB,SAAsCF,QCX7CW,EA9B+B,SAAC,GAEzC,IADD3D,EACA,EADAA,KAAM4D,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASb,EAChC,EADgCA,MAAOc,EACvC,EADuCA,WAExB,UAAMzD,IAAE0D,cAAR,YAAyBf,EAAQ3C,IAAE8C,WAAa,IAShE,OACI,sBAAK5D,UAAWc,IAAE2D,aAAlB,UAEI,cAAC,EAAD,CACIP,MAAOzD,EACP4C,SAAUgB,EAEVK,YAAa,qBACbjB,MAAOA,IAGX,cAAC,EAAD,CAAajC,QAAS8C,EAASK,WAAYlB,EAA3C,iBACA,sBAAMzD,UAAWc,IAAEyD,WAAnB,SAAgCA,QCM7BK,EA7BiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEnC,mBAAiB,IADiD,mBACnFlC,EADmF,KAC7EsE,EAD6E,OAEhEpC,mBAAiB,IAF+C,mBAEnFc,EAFmF,KAE5EuB,EAF4E,KAgBtFT,EAAaM,EAAMI,OAEvB,OACI,cAAC,EAAD,CACIxE,KAAMA,EACN4D,gBAjBgB,SAACL,GACrBe,EAAQf,EAAEC,cAAcC,OACxBc,EAAS,KAgBLV,QAdQ,WACR7D,EAAKyE,QACLC,MAAM,SAAW1E,EAAKyE,OAAhB,MACNJ,EAAgBrE,GAChBsE,EAAQ,KACLC,EAAS,4BAUZvB,MAAOA,EACPc,WAAYA,K,QCHTa,MAvBf,WAAgB,IAAD,EACezC,mBAA0B,IADzC,mBACJkC,EADI,KACGQ,EADH,KAOX,OACI,gCACI,uBACA,sBAAMrF,UAAWc,IAAEC,MAAnB,0BAGA,cAAC,EAAD,CAAmBf,UAAWc,IAAEwE,kBAAmBT,MAAOA,EAAOC,gBAVjD,SAACrE,GACrB4E,EAAS,GAAD,mBAAKR,GAAL,CAAY,CAACnD,IAAK6D,cAAM9E,cAW5B,uBAGA,2B,kCCeG+E,EAnCyC,SAAC,GASpD,EAPGpC,KAOF,IANEC,EAMH,EANGA,SAAUoC,EAMb,EANaA,gBACVzF,EAKH,EALGA,UACA0F,GAIH,EALchC,cAKd,EAJGgC,UAEG7D,EAEN,4FASKgC,EAAmB,UAAM/C,IAAE6E,SAAR,YAAoB3F,GAAwB,IAErE,OACI,kCACI,mCACIoD,KAAM,WACNC,SAda,SAACW,GAEtBX,GAAaA,EAASW,GACtByB,GAAoBA,EAAgBzB,EAAEC,cAAc2B,UAY5C5F,UAAW6D,GAGPhC,IAEP6D,GAAY,sBAAM1F,UAAWc,IAAE4C,cAAnB,SAAmCgC,QCsC7CG,MAzEf,WAAgB,IAAD,EACalD,mBAAiB,IAD9B,mBACJmD,EADI,KACEC,EADF,KAELtC,EAAQqC,EAAO,GAAK,0BAEpBE,EAAY,WACVvC,EACA0B,MAAM,gFAENA,MAAMW,IARH,EAYmBnD,oBAAkB,GAZrC,mBAYJiD,EAZI,KAYKK,EAZL,KAeX,OACI,gCACI,uBACA,sBAAMjG,UAAWc,IAAEC,MAAnB,0BAEA,sBAAKf,UAAWc,IAAEoF,OAAlB,UACI,cAAC,EAAD,CACIhC,MAAO4B,EACPxC,aAAcyC,EACdvC,QAASwC,EACTvC,MAAOA,IAIX,cAAC,EAAD,CACIzD,UAAWc,IAAEqF,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIvE,KAAG,EACHJ,QAASwE,EAFb,qBAOA,cAAC,EAAD,CAAarB,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIiB,QAASA,EACTH,gBAAiBQ,EAFrB,wBAQA,cAAC,EAAD,CAAeL,QAASA,EAASvC,SA/CxB,SAACW,GAAD,OAAsCiC,EAAWjC,EAAEC,cAAc2B,eAkD9E,uBAKA,2BClDGQ,MAjBf,WACI,OACI,sBAAKpG,UAAWc,IAAEsF,IAAlB,UACI,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,cAAC,EAAD,IAGA,cAAC,EAAD,QCLQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA5D,GACH6D,QAAQ7D,MAAMA,EAAM/C,c","file":"static/js/main.74fcc98e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"diveButtonFilter\":\"Affairs_diveButtonFilter__3N8gQ\",\"buttonFilter\":\"Affairs_buttonFilter__F5SIK\",\"listDivBody\":\"Affairs_listDivBody__22Woa\",\"divBody\":\"Affairs_divBody__39KOS\",\"name\":\"Affairs_name__32oBL\",\"low\":\"Affairs_low__P5qni\",\"high\":\"Affairs_high__36oMl\",\"middle\":\"Affairs_middle__2hOus\",\"title\":\"Affairs_title__3L8vI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__bQcta\",\"ava\":\"Message_ava__5D0a4\",\"back\":\"Message_back__zouWd\",\"block\":\"Message_block__1ajZA\",\"name\":\"Message_name__2zFE7\",\"message\":\"Message_message__3Jv1d\",\"time\":\"Message_time__1PbMs\",\"title\":\"Message_title__zBhdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greetingContainer\":\"Greeting_greetingContainer__2TSGg\",\"inputNotError\":\"Greeting_inputNotError__2v1Sj\",\"inputError\":\"Greeting_inputError__3flAH\",\"errorMessage\":\"Greeting_errorMessage__Jem0i\",\"title\":\"Greeting_title__1l7HM\",\"totalUsers\":\"Greeting_totalUsers__23BrZ\",\"buttonAddUser\":\"Greeting_buttonAddUser__1GqOE\",\"divConteiner\":\"Greeting_divConteiner__cznL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"standartInputStyle\":\"SuperInputText_standartInputStyle__2S8M2\",\"errorInputStyle\":\"SuperInputText_errorInputStyle__2yqxb\",\"inputNotError\":\"SuperInputText_inputNotError__1q_NP\",\"inputError\":\"SuperInputText_inputError__3pmVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3PbWC\",\"column\":\"HW4_column__bZqwm\",\"testSpanError\":\"HW4_testSpanError__1JgNj\",\"title\":\"HW4_title__1uCL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__c7Wf2\",\"red\":\"SuperButton_red__2dR0Q\",\"buttonFilter\":\"SuperButton_buttonFilter__2Ig6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3m-4T\",\"spanClassName\":\"SuperCheckbox_spanClassName__29Yd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3agx2\"};","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\ntype messageDataPropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nexport const Message = (props: messageDataPropsType) => {\r\n    return (\r\n        <div className={style.post}>\r\n            <div className={style.ava}>\r\n                <div className={style.back}>\r\n                    <img alt={\"ava\"} src={props.avatar}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.block}>\r\n                <div className={style.name}>{props.name}</div>\r\n                <div className={style.message}>{props.message}</div>\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {Message} from \"./Message\";\r\nimport s from './Message.module.css'\r\n\r\nconst messageData = {\r\n    avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6z5Asj733AuRYdGiVV7sBn_WqNEDLw6E3Tg&usqp=CAU',\r\n    name: 'Child of Korn',\r\n    message: 'Hello',\r\n    time: \"22.01\",\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n           <span className={s.title}> homeworks 1 </span>\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    // let newStyle = props.affair.priority === 'high' ? s.high : props.affair.priority == 'middle' : s.middle ? props.affair.priority == 'low' ? s.low : '';\r\n\r\n    let newStyle = props.affair.priority === 'high' ? s.high : props.affair.priority === 'low' ? s.low : s.middle;\r\n\r\n    return (\r\n\r\n            <div className={s.divBody}>\r\n                <div className={s.name}>{props.affair.name}</div>\r\n                <div className={newStyle}>{props.affair.priority}</div>\r\n                <button onClick={deleteCallback}>X</button>\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.default} ${red ? s.red : ''} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport s from './Affairs.module.css'\r\nimport {AffairPriorityType, AffairType, FilterType} from './HW2'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairPriorityType\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nexport function Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all')\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.listDivBody}>\r\n                {mappedAffairs}\r\n            </div>\r\n            <div className={s.diveButtonFilter}>\r\n                {/*<button className={s.buttonFilter} onClick={setAll}>All</button>*/}\r\n                {/*<button className={s.buttonFilter} onClick={setHigh}>High</button>*/}\r\n                {/*<button className={s.buttonFilter} onClick={setMiddle}>Middle</button>*/}\r\n                {/*<button className={s.buttonFilter} onClick={setLow}>Low</button>*/}\r\n                <SuperButton className={s.buttonFilter} onClick={setAll}>All</SuperButton>\r\n                <SuperButton className={s.buttonFilter} onClick={setHigh}>High</SuperButton>\r\n                <SuperButton className={s.buttonFilter} onClick={setMiddle}>Middle</SuperButton>\r\n                <SuperButton className={s.buttonFilter} onClick={setLow}>Low</SuperButton>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Affairs} from './Affairs'\r\nimport s from './Affairs.module.css'\r\n\r\nexport type AffairPriorityType = Array<AffairType>\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: FilterType\r\n}\r\nexport type FilterType = 'all' | 'high' | 'low' | 'middle'\r\n\r\nconst defaultAffairs: AffairPriorityType = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'}\r\n]\r\n\r\nexport const filterAffairs = (affairs: AffairPriorityType, filter: FilterType): AffairPriorityType => {\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else return affairs.filter(item => item.priority === filter)\r\n}\r\n\r\nexport const deleteAffair = (affairs: AffairPriorityType, _id: number): AffairPriorityType => {\r\n    return affairs.filter(item => item._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairPriorityType>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n    return (\r\n        <div>\r\n            <span className={s.title}>homeworks 2 </span>\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.inputError} ${spanClassName ? spanClassName : ''}`\r\n    // const finalInputClassName = ` ${s.errorInput} ${className ? className : error ? s.superInput : '' } ` // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = `${s.standartInputStyle} ${className}  ${error ? s.errorInputStyle : ''}` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any ++\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any++\r\n    addUser: () => void // need to fix any ++\r\n    error: string // need to fix any ++\r\n    totalUsers: number // need to fix any ++\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = `${s.inputNotError} ${error ? s.inputError : ''}`  // need to fix with (?:) ++\r\n\r\n    // текс который появляется при наличии ошибки добавляется из супперКомпоненты инпут,\r\n    // поэтому здесь его закомментировал. Ещё остался стиль который можно передавать в супперИнпут,\r\n    // но так как стили из двух домашек можно оставить одинаковыми, то зде ничего не передаю.\r\n    // А если мне захочется изменить импут другим стилем, то внутри компоненты передаваемый className\r\n    // находится на втором месте, в списке имён, и, соответственно, изменяет стили до него\r\n    // (назвал их standartInputStyle)\r\n\r\n    return (\r\n        <div className={s.divConteiner}>\r\n            {/*<input value={name} onChange={setNameCallback} className={inputClass} placeholder={'What is your name?'}/>*/}\r\n            <SuperInputText\r\n                value={name}\r\n                onChange={setNameCallback}\r\n                // className={inputClass}\r\n                placeholder={'What is your name?'}\r\n                error={error}\r\n            />\r\n            {/*<button className={s.buttonAddUser} onClick={addUser}>Add</button>*/}\r\n            <SuperButton onClick={addUser} disabled={!!error}>Add</SuperButton>\r\n            <span className={s.totalUsers}>{totalUsers}</span>\r\n            {/*<div className={s.errorMessage}>{error}</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    className: string\r\n    users: Array<UserType> // need to fix any+++++++++++++++++++++\r\n    addUserCallback: (name: string) => void // need to fix any ++++++++++++++++++++\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any++++++++\r\n    const [error, setError] = useState<string>('') // need to fix any ++++++++++++++++++++\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any++++++++++++++++++++++++\r\n        setName(e.currentTarget.value)\r\n        setError('')// need to fix +++++++++++++++\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim()) {\r\n            alert(`Hello ` + name.trim() + ` !`) // need to fix ++++++++++++++++++++++++++++++\r\n            addUserCallback(name)\r\n            setName('')\r\n        } else setError('Field must not be empty')\r\n    }\r\n\r\n    let totalUsers = users.length // need to fix ++++++++++++\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\nimport s from \"./Greeting.module.css\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any ++++++++++++++\r\n    name: string // need to fix any +++++++++++++++\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any +++++++++++++++\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any +++++++++++++++++++++++++++\r\n        setUsers([...users, {_id: v1(), name}]) // need to fix ++++++++++++++++++++\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <span className={s.title}>homeworks 3 </span>\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer className={s.greetingContainer} users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChange &&  onChange(e)\r\n        onChangeChecked &&  onChangeChecked(e.currentTarget.checked)\r\n\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Field must not be empty'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <span className={s.title}>homeworks 4 </span>\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рaботает ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            {/*/!*<HW2/>*!/ // default*/}\r\n            <HW3/>\r\n            {/*<HW3/> default*/ }\r\n\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}