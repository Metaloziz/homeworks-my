{"version":3,"sources":["p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css"],"names":["Message","props","className","style","post","ava","back","alt","src","avatar","block","name","message","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","item","filterAffairs","deleteAffair","App","s","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.b48603c7.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\ntype messageDataPropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nexport const Message = (props: messageDataPropsType) => {\r\n    return (\r\n        <div className={style.post}>\r\n            <div className={style.ava}>\r\n\r\n                <div className={style.back}>\r\n                    <img alt={\"ava\"} src={props.avatar}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.block}>\r\n                <div className={style.name}>{props.name}</div>\r\n                <div className={style.message}>{props.message}</div>\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {Message} from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6z5Asj733AuRYdGiVV7sBn_WqNEDLw6E3Tg&usqp=CAU',\r\n    name: 'Child of Korn',\r\n    message: 'Hello',\r\n    time: \"22.01\",\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number)=> void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n    props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {props.affair.name}\r\n            <button onClick={deleteCallback}>X</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport s from 'Affairs.module.css'\r\nimport {AffairPriorityType, AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairPriorityType\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nexport function Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => props.setFilter('all')\r\n    const setHigh = () => props.setFilter('high')\r\n    const setMiddle = () => props.setFilter('middle')\r\n    const setLow = () => props.setFilter('low')\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Affairs} from './Affairs'\r\n\r\n\r\nexport type AffairPriorityType = Array<AffairType>\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: FilterType\r\n}\r\nexport type FilterType = 'all' | 'high' | 'low' | 'middle'\r\n\r\n\r\nconst defaultAffairs: AffairPriorityType = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'middle'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'low'},\r\n    {_id: 5, name: 'html & css', priority: 'low'},\r\n]\r\n\r\n\r\nexport const filterAffairs = (affairs: AffairPriorityType, filter: FilterType): AffairPriorityType => {\r\n    if (filter === 'all') {return affairs}\r\n    else\r\n\r\n        return affairs.filter( item => item.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: AffairPriorityType, _id: number): AffairPriorityType => {\r\n    return affairs.filter( item => item._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairPriorityType>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            {/*/!*<HW2/>*!/ // default*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__bQcta\",\"ava\":\"Message_ava__5D0a4\",\"back\":\"Message_back__zouWd\",\"block\":\"Message_block__1ajZA\",\"name\":\"Message_name__2zFE7\",\"message\":\"Message_message__3Jv1d\",\"time\":\"Message_time__1PbMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3agx2\"};"],"sourceRoot":""}